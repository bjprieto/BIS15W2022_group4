library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolf Pack Sex Composition by Population"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolf Pack Sex Composition by Population", width = "600px"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = NULL),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = NULL),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(aes(data = wolves, x = sex))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = NULL),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(aes(data = wolves, x = "sex"))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves, aes(x = "sex"))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves, aes_string(x = "sex"))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves, aes_string(x = "sex", y = input$pop))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves, aes_string(x = "sex", y = input$pop))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves, aes_string(x = "sex"))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = input$pop, aes_string(x = "sex"))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves, aes_string(x = "sex", fill = input$pop))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop = input$pop), aes_string(x = "sex"))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex"))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
title = NULL)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)+
theme_linedraw()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
plotOutput("plot")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)+
theme_linedraw(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
box(selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN")),
box(plotOutput("plot"))
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)+
theme_linedraw(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
box(selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
title = "Plot Options",
width = "400px"
),
box(plotOutput("plot"),
title = "Counts by Sex"
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)+
theme_linedraw(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
box(selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
title = "Plot Options"
),
box(plotOutput("plot"),
title = "Counts by Sex"
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)+
theme_linedraw(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
box(selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
title = "Plot Options",
width = "100px"
),
box(plotOutput("plot"),
title = "Counts by Sex"
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)+
theme_linedraw(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
box(selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
title = "Plot Options",
width = "100px"
),
box(plotOutput("plot"),
title = "Counts by Sex"
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)+
theme_linedraw(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
box(selectInput("pop", "Select Population", choices = levels(as.factor(wolves$pop)), selected = "AK.PEN"),
title = "Plot Options"
),
box(plotOutput("plot"),
title = "Counts by Sex"
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data = wolves %>%
filter(pop == input$pop), aes_string(x = "sex", fill = "sex"))+
geom_bar()+
labs(x = NULL,
fill = "Sex",
y = "Count",
title = NULL)+
theme_linedraw(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
